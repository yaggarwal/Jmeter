Initialli there are tow folders:

Test Plan and WorkBench


Workbench - used for rough work. You do recording and the paste it into test plan.

For Recording  - you need to set proxy in firefox first.
Configure proxy configurations in Jmeter - Right click Workbench -> Add Non Test elements -> HTTPS(S) Test Script recorder
     - Set the port as same in firefox
     - Grouping - Put each group in new controller
     - Target controller - Workbench - HTTP(s) test Script recorder
     - Add any suggested  excudes - to rove request liks CSS , image etc
     -  hit start button



Putting load
===========
1. Right click Test plan -> Thread (Users) -> Add Thread group

Thread here -> is a virtual user that put load on an application

In thread group we define:
   -> No of thread (users)
   -> Ramp up time
   -> Loop Count
   -> Scheduler -> We can specify the duration in seconds for which test should run. The test will stop after running the specified amount of time
                   and report the results till which it has executed.
   
2. Within the thread group put the simple controller (http request). You can copy this from the workbench
3. Adding Listners to view reports. Right Click Test Plan -> Add Listner -> View Results in Table


Reporting Paramters:
===================
Through put -  Work done by machine per unit time . In this case it is the no of bytes returned by machine per minute. You need to make sure that
               thourgh put does not descrease with the increase in load. It should be remain uniform. See this in the graj results. If the graph 
               shows decrease in through put with the increase in load it means application is not able to cope up with the increasing load.
Deviation -  Deviation should be smaller. It should not increase with the increasing load.

Additonal Plugins
-------------------
Download the jars and place in jmeter/lib/ext folder and restart jmeter.
 Example: step up thread group for simulating real time users
 There also exists for integration with selenium, hadoop etc
 
Listners:
Graph results
View results in table
View results in tree -  this is handly when we write end to end complete scritping
